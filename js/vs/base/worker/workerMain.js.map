{"version":3,"sources":["vs/base/worker/fake","vs/base/worker/vs/loader.js","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/arrays.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/diff/diffChange.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/errors.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/iterator.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/keyCodes.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/lifecycle.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/linkedList.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/event.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/cancellation.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/platform.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/process.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/path.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/strings.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/hash.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/diff/diff.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/types.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/uint.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/uri.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/common/worker/simpleWorker.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/core/characterClassifier.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/core/position.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/core/range.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/core/selection.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/core/token.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/diff/diffComputer.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/model/wordHelper.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/modes/linkComputer.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/standalone/standaloneEnums.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/standalone/standaloneBase.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/model/mirrorTextModel.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/editor/common/services/editorSimpleWorker.ts","vs/base/worker/file:/Users/alex/src/vscode-prs/out-editor-src/vs/base/worker/workerMain.ts"],"names":["define","AMDLoader","__m","__M","deps","result","i","len","length","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","RegExp","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","preferScriptTags","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","amdModulesPattern","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","isElectronRenderer","getConfig","BrowserScriptLoader","NodeScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","document","createElement","setAttribute","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","moduleExports_2","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","warn","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","_nodeRequire_1","what","doNotInitLoader","mergeSort","compare","_sort","lo","hi","aux","mid","leftIdx","rightIdx","_merge","firstIndex","array","fn","tail","n","tail2","arr","one","other","itemEquals","binarySearch","comparator","low","high","comp","findFirstInSorted","p","floor","groupBy","currentGroup","element","coalesce","filter","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","position","seen","elem","distinctES6","Set","has","add","first","notFoundValue","index","firstOrDefault","flatten","range","arg","arrayInsert","target","insertIndex","insertArr","before","after","pushToStart","splice","unshift","pushToEnd","asArray","x","DiffChange","[object Object]","originalStart","originalLength","modifiedStart","modifiedLength","ErrorHandler","listeners","unexpectedErrorHandler","forEach","listener","emit","errorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","iterable","next","some","predicate","iterables","consume","atMost","Number","POSITIVE_INFINITY","consumed","done","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","toLowerCase","uiMap","userSettingsUSMap","userSettingsGeneralMap","createSimpleKeybinding","keybinding","OS","ctrlCmd","winCtrl","SimpleKeybinding","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","createKeybinding","chordPart","ChordKeybinding","ctrlKey","shiftKey","altKey","metaKey","parts","errors_1","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","trackDisposable","log","MultiDisposeError","errors","super","dispose","iterator_1","d","isDisposable","combinedDisposable","disposables","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","values","t","DISABLE_DISPOSED_WARNING","_store","MutableDisposable","_value","ImmortalReference","object","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","Event","once","event","thisArgs","didFire","snapshot","each","reduce","merge","initial","output","emitter","Emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","start","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","fromPromise","promise","then","toPromise","Promise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","listenerCount","threshold","count","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","EventBufferer","buffers","pop","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","parent","_token","_parentListener","cancel","token","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","maxTouchPoints","language","_platform","isMacintosh","isLinux","isNative","isWeb","isIOS","_globals","globals","setImmediate","postMessage","pending","vscodeSetImmediateId","candidate","lastId","myId","_promise","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","Uint8Array","view","Uint16Array","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","dots","lastSlashIndex","_format","sep","pathObject","dir","root","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","last","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","extname","isFalsyOrWhitespace","trim","pad","l","char","_formatRegexp","escapeRegExpCharacters","ltrim","needleLen","rtrim","haystackLen","idx","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","fromCharCode","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","group","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonPrefixLength","min","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","graphemeBreakType","getGraphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCharLength","prevCodePoint","prevGraphemeBreakType","decodeUTF8","byteLength","v0","codePoint","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","breakTypeA","breakTypeB","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","ignoreEscapedChars","singleLetterHash","_data","_INSTANCE","nodeCount","nodeIndex","doHash","hashVal","numberHash","initialHashVal","item","keys","stringHash","objectHash","booleanHash","val","s","leftRotate","bits","totalBits","delta","fill","dest","toHexString","bitsize","leftPad","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","strLen","buff","buffLen","leftoverHighSurrogate","strings","_push","_step","_wrapUp","ml","setUint32","bigBlock32","_bigBlock32","getUint32","f","k","temp","ArrayBuffer","StringDiffSequence","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","diffChange_1","originalIndex","modifiedIndex","MarkNextChange","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","sequence","elements","getElements","_isStringArray","hashes","hash_1","newIndex","index1","index2","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","ElementsAreEqual","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","AddModifiedElement","AddOriginalElement","getReverseChanges","originalStartPoint","modifiedStartPoint","lastForwardChange","getOriginalEnd","getModifiedEnd","getChanges","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","WALKTRACE","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","OriginalElementsAreEqual","ModifiedElementsAreEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","_ModifiedIsBoundary","_OriginalRegionIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","isString","isUndefined","isUndefinedOrNull","isFunction","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isObject","isNumber","isBoolean","assertType","assertIsDefined","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","query","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","Uri","percentDecode","components","pathFragment","newPath","file","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","workerId","req","reject","_send","vsWorker","_handleMessage","seq","replyMessage","reply","requestMessage","handleMessage","transfer","sendMessage","SimpleWorkerClient","workerFactory","host","lazyProxyReject","_worker","_register","_protocol","setWorkerId","getId","loaderConfiguration","requirejs","contexts","hostMethods","types","_onModuleLoaded","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","_onError","info","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","initialize","loaderConfig","hostProxy","vs","CharacterClassifier","_defaultValue","defaultValue","uint_1","_asciiMap","_createAsciiMap","_map","asciiMap","CharacterSet","_actual","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","Selection","range_1","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","sel","direction","Token","TokenizationResult","tokens","endState","TokenizationResult2","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","diff_1","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","createCharSequence","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","createFromDiffChange","txt","createContinueProcessingPredicate","maximumRuntime","startTime","DiffComputer","originalLines","modifiedLines","shouldMakePrettyDiff","continueLineDiff","maxComputationTime","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","createWordRegExp","ensureValidWordDefinition","wordDefinition","flags","_defaultConfig","maxLen","windowSize","timeBudget","_findRegexMatchEnclosingPosition","text","stopPos","matchIndex","getWordAtText","textOffset","prevRegexIndex","regexIndex","thisMatch","word","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","currentState","_stateMachine","_classifier","LinkComputer","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","model","stateMachine","characterClassifier_1","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","computeLinks","BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","KeyMod","keyCodes_1","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","cancellation_1","standaloneEnums","selection_1","uri_1","token_1","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","cnt","maxCnt","_getAccumulatedValue","accumulatedValue","getTotalValue","midStop","midStart","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","_acceptDeleteRange","_acceptInsertText","eolLength","linesLength","lineStartValues","prefixSumComputer_1","lineIndex","newValue","changeValue","_setLineText","removeValues","insertText","insertLines","newLengths","MirrorModel","mirrorTextModel_1","version","getText","wordAtText","wordHelper_1","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","ranges","words","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","_ensureLineStarts","getAccumulatedValue","getIndexOf","lineLength","isIPosition","hasChanged","maxCharacter","EditorSimpleWorker","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","all","EOL","strURL","onEvents","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","getLinesContent","diffComputer_1","identical","_modelsAreIdentical","originalLineCount","modelUrl","edits","lastEol","arrays_1","compareRangesUsingStarts","getValueInRange","_diffLimit","editOffset","offsetAt","lift","positionAt","newEdit","linkComputer_1","wordDef","wordDefFlags","wordDefRegExp","wordAt","getWordAtPosition","_suggestionsLimit","getLineWords","selectionText","wordRange","inplaceReplaceSupport_1","navigateValueSet","createData","foreignHostMethods","ctx","fhr","getMirrorModels","_getModels","foreignModule","monaco","standaloneBase_1","MonacoEnvironment","monacoBaseUrl","isFirstMessage","beforeReadyMessages","onmessage","ws","messageHandler","loadCode"],"mappings":"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","file":"workerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (typeof options.preferScriptTags === 'undefined') {\n                options.preferScriptTags = false;\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            var isNodeModule = ((this.nodeModulesMap[moduleId] === true)\n                || (this.options.amdModulesPattern instanceof RegExp && !this.options.amdModulesPattern.test(moduleId)));\n            if (isNodeModule) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                if (this._env.isWebWorker) {\n                    this._scriptLoader = new WorkerScriptLoader();\n                }\n                else if (this._env.isElectronRenderer) {\n                    var preferScriptTags = moduleManager.getConfig().getOptionsLiteral().preferScriptTags;\n                    if (preferScriptTags) {\n                        this._scriptLoader = new BrowserScriptLoader();\n                    }\n                    else {\n                        this._scriptLoader = new NodeScriptLoader(this._env);\n                    }\n                }\n                else if (this._env.isNode) {\n                    this._scriptLoader = new NodeScriptLoader(this._env);\n                }\n                else {\n                    this._scriptLoader = new BrowserScriptLoader();\n                }\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            if (/^node\\|/.test(scriptSrc)) {\n                var opts = moduleManager.getConfig().getOptionsLiteral();\n                var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                var script = document.createElement('script');\n                script.setAttribute('async', 'async');\n                script.setAttribute('type', 'text/javascript');\n                this.attachListeners(script, callback, errorback);\n                script.setAttribute('src', scriptSrc);\n                // Propagate CSP nonce to dynamically created script tag.\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n                if (cspNonce) {\n                    script.setAttribute('nonce', cspNonce);\n                }\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_2 = null;\n                try {\n                    moduleExports_2 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        // done\n                        return;\n                    }\n                    if (cachedData.length < lastSize) {\n                        // less data than before: skip, try again next round\n                        createLoop();\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\n                    _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                    });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.config = function (params, shouldOverwrite) {\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n                _this.configure(params, shouldOverwrite);\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\n/**\n * @deprecated ES6: use `Array.findIndex`\n */\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n}\n","\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encounter errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, IDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * @deprecated ES6: use `String.startsWith`\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated ES6: use `String.endsWith`\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any): number {\n\treturn doHash(obj, 0);\n}\n\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nfunction numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nfunction toHexString(value: number, bitsize: number = 32): string {\n\treturn leftPad((value >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\nimport { stringHash } from 'vs/base/common/hash';\nimport { Constants } from 'vs/base/common/uint';\n\nexport class StringDiffSequence implements ISequence {\n\n\tconstructor(private source: string) { }\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\tconst source = this.source;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t}\n\t\treturn characters;\n\t}\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n\nexport interface ISequence {\n\tgetElements(): Int32Array | number[] | string[];\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, matchLengthOfLongest: number): boolean;\n}\n\nexport interface IDiffResult {\n\tquitEarly: boolean;\n\tchanges: IDiffChange[];\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n\tpublic static Copy2(sourceArray: Int32Array, sourceIndex: number, destinationArray: Int32Array, destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nconst enum LocalConstants {\n\tMaxDifferencesHistory = 1447\n}\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate readonly ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate readonly _hasStrings: boolean;\n\tprivate readonly _originalStringElements: string[];\n\tprivate readonly _originalElementsOrHash: Int32Array;\n\tprivate readonly _modifiedStringElements: string[];\n\tprivate readonly _modifiedElementsOrHash: Int32Array;\n\n\tprivate m_forwardHistory: Int32Array[];\n\tprivate m_reverseHistory: Int32Array[];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tconst [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n\t\tconst [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n\n\t\tthis._hasStrings = (originalHasStrings && modifiedHasStrings);\n\t\tthis._originalStringElements = originalStringElements;\n\t\tthis._originalElementsOrHash = originalElementsOrHash;\n\t\tthis._modifiedStringElements = modifiedStringElements;\n\t\tthis._modifiedElementsOrHash = modifiedElementsOrHash;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate static _isStringArray(arr: Int32Array | number[] | string[]): arr is string[] {\n\t\treturn (arr.length > 0 && typeof arr[0] === 'string');\n\t}\n\n\tprivate static _getElements(sequence: ISequence): [string[], Int32Array, boolean] {\n\t\tconst elements = sequence.getElements();\n\n\t\tif (LcsDiff._isStringArray(elements)) {\n\t\t\tconst hashes = new Int32Array(elements.length);\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\thashes[i] = stringHash(elements[i], 0);\n\t\t\t}\n\t\t\treturn [elements, hashes, true];\n\t\t}\n\n\t\tif (elements instanceof Int32Array) {\n\t\t\treturn [[], elements, false];\n\t\t}\n\n\t\treturn [[], new Int32Array(elements), false];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffResult {\n\t\treturn this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): IDiffResult {\n\t\tconst quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\tchanges = this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarlyArr[0],\n\t\t\tchanges: changes\n\t\t};\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tconst midOriginalArr = [0];\n\t\tconst midModifiedArr = [0];\n\t\tconst result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tconst midOriginal = midOriginalArr[0];\n\t\tconst midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tconst leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: Int32Array, reversePoints: Int32Array,\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]\n\t): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null;\n\t\tlet reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tconst diagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tconst lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tconst diagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tconst maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tconst numDiagonals = maxDifferences + 1;\n\t\tconst forwardPoints = new Int32Array(numDiagonals);\n\t\tconst reversePoints = new Int32Array(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tconst diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tconst diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tconst diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tconst diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tconst delta = diagonalReverseBase - diagonalForwardBase;\n\t\tconst deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tfor (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tconst matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\tif (prevChange.originalLength > 0) {\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\t}\n\t\t\t\tif (prevChange.modifiedLength > 0) {\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tconst originalStart = change.originalStart - delta;\n\t\t\t\tconst modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tconst originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tconst modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tconst originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tconst modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tconst originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tconst modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tconst diagonalsBelow = diagonalBaseIndex;\n\t\tconst diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tconst diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tconst lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tconst upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as types from 'vs/base/common/types';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker extends IDisposable {\n\tgetId(): number;\n\tpostMessage(message: any, transfer: ArrayBuffer[]): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: any): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\ninterface IMessage {\n\tvsWorker: number;\n\treq?: string;\n\tseq?: string;\n}\n\ninterface IRequestMessage extends IMessage {\n\treq: string;\n\tmethod: string;\n\targs: any[];\n}\n\ninterface IReplyMessage extends IMessage {\n\tseq: string;\n\terr: any;\n\tres: any;\n}\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tlet req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\treq: req,\n\t\t\t\tmethod: method,\n\t\t\t\targs: args\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic handleMessage(message: IMessage): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: IMessage): void {\n\t\tif (msg.seq) {\n\t\t\tlet replyMessage = <IReplyMessage>msg;\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\t\tif (replyMessage.err) {\n\t\t\t\tlet err = replyMessage.err;\n\t\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\t\terr = new Error();\n\t\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t\t}\n\t\t\t\treply.reject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treply.resolve(replyMessage.res);\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestMessage = <IRequestMessage>msg;\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: r,\n\t\t\t\terr: undefined\n\t\t\t});\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: undefined,\n\t\t\t\terr: transformErrorForSerialization(e)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _send(msg: IRequestMessage | IReplyMessage): void {\n\t\tlet transfer: ArrayBuffer[] = [];\n\t\tif (msg.req) {\n\t\t\tconst m = <IRequestMessage>msg;\n\t\t\tfor (let i = 0; i < m.args.length; i++) {\n\t\t\t\tif (m.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(m.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst m = <IReplyMessage>msg;\n\t\t\tif (m.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(m.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\nexport interface IWorkerClient<W> {\n\tgetProxyObject(): Promise<W>;\n\tdispose(): void;\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<W extends object, H extends object> extends Disposable implements IWorkerClient<W> {\n\n\tprivate readonly _worker: IWorker;\n\tprivate readonly _onModuleLoaded: Promise<string[]>;\n\tprivate readonly _protocol: SimpleWorkerProtocol;\n\tprivate readonly _lazyProxy: Promise<W>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string, host: H) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: any) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tif (lazyProxyReject) {\n\t\t\t\t\tlazyProxyReject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\tif (typeof (host as any)[method] !== 'function') {\n\t\t\t\t\treturn Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\treturn Promise.resolve((host as any)[method].apply(host, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof (<any>self).require !== 'undefined' && typeof (<any>self).require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = (<any>self).require.getConfig();\n\t\t} else if (typeof (<any>self).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>self).requirejs.s.contexts._.config;\n\t\t}\n\n\t\tconst hostMethods = types.getAllMethodNames(host);\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\n\t\t\tmoduleId,\n\t\t\thostMethods,\n\t\t]);\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\n\t\tthis._lazyProxy = new Promise<W>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tresolve(types.createProxyObject<W>(availableMethods, proxyMethodRequest));\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getProxyObject(): Promise<W> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IRequestHandlerFactory<H> {\n\t(host: H): IRequestHandler;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer<H extends object> {\n\n\tprivate _requestHandlerFactory: IRequestHandlerFactory<H> | null;\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postMessage: (msg: any, transfer?: ArrayBuffer[]) => void, requestHandlerFactory: IRequestHandlerFactory<H> | null) {\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\n\t\tthis._requestHandler = null;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2], <string[]>args[3]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate initialize(workerId: number, loaderConfig: any, moduleId: string, hostMethods: string[]): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._protocol.sendMessage(method, args);\n\t\t};\n\n\t\tconst hostProxy = types.createProxyObject<H>(hostMethods, proxyMethodRequest);\n\n\t\tif (this._requestHandlerFactory) {\n\t\t\t// static request handler\n\t\t\tthis._requestHandler = this._requestHandlerFactory(hostProxy);\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._requestHandler));\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(<any>self).require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleId], (module: { create: IRequestHandlerFactory<H> }) => {\n\t\t\t\tthis._requestHandler = module.create(hostProxy);\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(types.getAllMethodNames(this._requestHandler));\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: string) => void): SimpleWorkerServer<any> {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/base/common/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprotected _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprotected _map: Map<number, number>;\n\n\tprotected _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IState } from 'vs/editor/common/modes';\n\nexport class Token {\n\t_tokenBrand: void;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset | 0;// @perf\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\nexport class TokenizationResult2 {\n\t_tokenizationResult2Brand: void;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, ISequence, LcsDiff, IDiffResult } from 'vs/base/common/diff/diff';\nimport * as strings from 'vs/base/common/strings';\nimport { ICharChange, ILineChange } from 'vs/editor/common/editorCommon';\n\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nexport interface IDiffComputerResult {\n\tquitEarly: boolean;\n\tchanges: ILineChange[];\n}\n\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffResult {\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineSequence implements ISequence {\n\n\tpublic readonly lines: string[];\n\tprivate readonly _startColumns: number[];\n\tprivate readonly _endColumns: number[];\n\n\tconstructor(lines: string[]) {\n\t\tconst startColumns: number[] = [];\n\t\tconst endColumns: number[] = [];\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\n\t\t\tstartColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n\t\t\tendColumns[i] = getLastNonBlankColumn(lines[i], 1);\n\t\t}\n\t\tthis.lines = lines;\n\t\tthis._startColumns = startColumns;\n\t\tthis._endColumns = endColumns;\n\t}\n\n\tpublic getElements(): Int32Array | number[] | string[] {\n\t\tconst elements: string[] = [];\n\t\tfor (let i = 0, len = this.lines.length; i < len; i++) {\n\t\t\telements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n\t\t}\n\t\treturn elements;\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic createCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\n\t\tconst charCodes: number[] = [];\n\t\tconst lineNumbers: number[] = [];\n\t\tconst columns: number[] = [];\n\t\tlet len = 0;\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\n\t\t\tconst lineContent = this.lines[index];\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = col;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t}\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\n\t}\n}\n\nclass CharSequence implements ISequence {\n\n\tprivate readonly _charCodes: number[];\n\tprivate readonly _lineNumbers: number[];\n\tprivate readonly _columns: number[];\n\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\n\t\tthis._charCodes = charCodes;\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._columns = columns;\n\t}\n\n\tpublic getElements(): Int32Array | number[] | string[] {\n\t\treturn this._charCodes;\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\treturn this._columns[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\treturn this._columns[i] + 1;\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber: number;\n\tpublic originalStartColumn: number;\n\tpublic originalEndLineNumber: number;\n\tpublic originalEndColumn: number;\n\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedStartColumn: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic modifiedEndColumn: number;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalStartColumn: number,\n\t\toriginalEndLineNumber: number,\n\t\toriginalEndColumn: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedStartColumn: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tmodifiedEndColumn: number\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalStartColumn = originalStartColumn;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.originalEndColumn = originalEndColumn;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\n\t}\n\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalStartColumn: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet originalEndColumn: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedStartColumn: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet modifiedEndColumn: number;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = 0;\n\t\t\toriginalStartColumn = 0;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\toriginalEndColumn = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\toriginalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = 0;\n\t\t\tmodifiedStartColumn = 0;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tmodifiedEndColumn = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t\tmodifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\treturn new CharChange(\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\n\t\t);\n\t}\n}\n\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\n\tconst result = [rawChanges[0]];\n\tlet prevChange = result[0];\n\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\n\t\tconst currChange = rawChanges[i];\n\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber: number;\n\tpublic originalEndLineNumber: number;\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic charChanges: CharChange[] | undefined;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalEndLineNumber: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tcharChanges: CharChange[] | undefined\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.charChanges = charChanges;\n\t}\n\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineSequence, modifiedLineSequence: LineSequence, continueCharDiff: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n\t\t\t// Compute character changes for diff chunks of at most 20 lines...\n\t\t\tconst originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n\n\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t}\n\n\t\t\tcharChanges = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t}\n\t\t}\n\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n\t}\n}\n\nexport interface IDiffComputerOpts {\n\tshouldComputeCharChanges: boolean;\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldMakePrettyDiff: boolean;\n\tmaxComputationTime: number;\n}\n\nexport class DiffComputer {\n\n\tprivate readonly shouldComputeCharChanges: boolean;\n\tprivate readonly shouldPostProcessCharChanges: boolean;\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\n\tprivate readonly shouldMakePrettyDiff: boolean;\n\tprivate readonly originalLines: string[];\n\tprivate readonly modifiedLines: string[];\n\tprivate readonly original: LineSequence;\n\tprivate readonly modified: LineSequence;\n\tprivate readonly continueLineDiff: () => boolean;\n\tprivate readonly continueCharDiff: () => boolean;\n\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n\t\tthis.originalLines = originalLines;\n\t\tthis.modifiedLines = modifiedLines;\n\t\tthis.original = new LineSequence(originalLines);\n\t\tthis.modified = new LineSequence(modifiedLines);\n\n\t\tthis.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n\t\tthis.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n\t}\n\n\tpublic computeDiff(): IDiffComputerResult {\n\n\t\tif (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n\t\t\t// empty original => fast path\n\t\t\treturn {\n\t\t\t\tquitEarly: false,\n\t\t\t\tchanges: [{\n\t\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\t\toriginalEndLineNumber: 1,\n\t\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\t\tmodifiedEndLineNumber: this.modified.lines.length,\n\t\t\t\t\tcharChanges: [{\n\t\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\n\t\tif (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n\t\t\t// empty modified => fast path\n\t\t\treturn {\n\t\t\t\tquitEarly: false,\n\t\t\t\tchanges: [{\n\t\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\t\toriginalEndLineNumber: this.original.lines.length,\n\t\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\t\tmodifiedEndLineNumber: 1,\n\t\t\t\t\tcharChanges: [{\n\t\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\n\t\tconst diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n\t\tconst rawChanges = diffResult.changes;\n\t\tconst quitEarly = diffResult.quitEarly;\n\n\t\t// The diff is always computed with ignoring trim whitespace\n\t\t// This ensures we get the prettiest diff\n\n\t\tif (this.shouldIgnoreTrimWhitespace) {\n\t\t\tconst lineChanges: LineChange[] = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tquitEarly: quitEarly,\n\t\t\t\tchanges: lineChanges\n\t\t\t};\n\t\t}\n\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\n\t\tconst result: LineChange[] = [];\n\n\t\tlet originalLineIndex = 0;\n\t\tlet modifiedLineIndex = 0;\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n\t\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\t\t// These lines differ only in trim whitespace\n\n\t\t\t\t\t// Check the leading whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalStartColumn--;\n\t\t\t\t\t\t\tmodifiedStartColumn--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the trailing whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalEndColumn++;\n\t\t\t\t\t\t\tmodifiedEndColumn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalLineIndex++;\n\t\t\t\tmodifiedLineIndex++;\n\t\t\t}\n\n\t\t\tif (nextChange) {\n\t\t\t\t// Emit the actual change\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarly,\n\t\t\tchanges: result\n\t\t};\n\t}\n\n\tprivate _pushTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): void {\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n\t\t\t// Merged into previous\n\t\t\treturn;\n\t\t}\n\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\t\tif (this.shouldComputeCharChanges) {\n\t\t\tcharChanges = [new CharChange(\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t)];\n\t\t}\n\t\tresult.push(new LineChange(\n\t\t\toriginalLineNumber, originalLineNumber,\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\n\t\t\tcharChanges\n\t\t));\n\t}\n\n\tprivate _mergeTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): boolean {\n\t\tconst len = result.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevChange = result[len - 1];\n\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n\t\t\t// Don't merge with inserts/deletes\n\t\t\treturn false;\n\t\t}\n\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\n\t\t\tif (this.shouldComputeCharChanges && prevChange.charChanges) {\n\t\t\t\tprevChange.charChanges.push(new CharChange(\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nfunction getFirstNonBlankColumn(txt: string, defaultValue: number): number {\n\tconst r = strings.firstNonWhitespaceIndex(txt);\n\tif (r === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn r + 1;\n}\n\nfunction getLastNonBlankColumn(txt: string, defaultValue: number): number {\n\tconst r = strings.lastNonWhitespaceIndex(txt);\n\tif (r === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn r + 2;\n}\n\nfunction createContinueProcessingPredicate(maximumRuntime: number): () => boolean {\n\tif (maximumRuntime === 0) {\n\t\treturn () => true;\n\t}\n\n\tconst startTime = Date.now();\n\treturn () => {\n\t\treturn Date.now() - startTime < maximumRuntime;\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nconst _defaultConfig = {\n\tmaxLen: 1000,\n\twindowSize: 15,\n\ttimeBudget: 150\n};\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number, config = _defaultConfig): IWordAtPosition | null {\n\n\tif (text.length > config.maxLen) {\n\t\t// don't throw strings that long at the regexp\n\t\t// but use a sub-string in which a word must occur\n\t\tlet start = column - config.maxLen / 2;\n\t\tif (start < 0) {\n\t\t\ttextOffset += column;\n\t\t\tstart = 0;\n\t\t} else {\n\t\t\ttextOffset += start;\n\t\t}\n\t\ttext = text.substring(start, column + config.maxLen / 2);\n\t\treturn getWordAtText(column, wordDefinition, text, textOffset, config);\n\t}\n\n\tconst t1 = Date.now();\n\tconst pos = column - 1 - textOffset;\n\n\tlet prevRegexIndex = -1;\n\tlet match: RegExpMatchArray | null = null;\n\n\tfor (let i = 1; ; i++) {\n\t\t// check time budget\n\t\tif (Date.now() - t1 >= config.timeBudget) {\n\t\t\t// break;\n\t\t}\n\n\t\t// reset the index at which the regexp should start matching, also know where it\n\t\t// should stop so that subsequent search don't repeat previous searches\n\t\tconst regexIndex = pos - config.windowSize * i;\n\t\twordDefinition.lastIndex = Math.max(0, regexIndex);\n\t\tconst thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n\n\t\tif (!thisMatch && match) {\n\t\t\t// stop: we have something\n\t\t\tbreak;\n\t\t}\n\n\t\tmatch = thisMatch;\n\n\t\t// stop: searched at start\n\t\tif (regexIndex <= 0) {\n\t\t\tbreak;\n\t\t}\n\t\tprevRegexIndex = regexIndex;\n\t}\n\n\tif (match) {\n\t\tlet result = {\n\t\t\tword: match[0],\n\t\t\tstartColumn: textOffset + 1 + match.index!,\n\t\t\tendColumn: textOffset + 1 + match.index! + match[0].length\n\t\t};\n\t\twordDefinition.lastIndex = 0;\n\t\treturn result;\n\t}\n\n\treturn null;\n}\n\nfunction _findRegexMatchEnclosingPosition(wordDefinition: RegExp, text: string, pos: number, stopPos: number): RegExpMatchArray | null {\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn match;\n\t\t} else if (stopPos > 0 && matchIndex > stopPos) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tconst data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet inSquareBrackets = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\tinSquareBrackets = true;\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tinSquareBrackets = false;\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Asterisk:\n\t\t\t\t\t\t\t// `*` terminates a link if the link began with `*`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\t\t\t// `|` terminates a link if the link began with `|`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Space:\n\t\t\t\t\t\t\t// ` ` allow space in between [ and ]\n\t\t\t\t\t\t\tchClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\n\nexport class BasicInplaceReplace {\n\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\n\n\t\tif (range1 && text1) {\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tlet numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tlet precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n\t\tlet n1 = Number(value);\n\t\tlet n2 = parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate readonly _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n\n\nexport enum AccessibilitySupport {\n\t/**\n\t * This should be the browser case where it is not known if a screen reader is attached or no.\n\t */\n\tUnknown = 0,\n\tDisabled = 1,\n\tEnabled = 2\n}\n\nexport enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 1,\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 4\n}\n\nexport enum CompletionItemKind {\n\tMethod = 0,\n\tFunction = 1,\n\tConstructor = 2,\n\tField = 3,\n\tVariable = 4,\n\tClass = 5,\n\tStruct = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tEvent = 10,\n\tOperator = 11,\n\tUnit = 12,\n\tValue = 13,\n\tConstant = 14,\n\tEnum = 15,\n\tEnumMember = 16,\n\tKeyword = 17,\n\tText = 18,\n\tColor = 19,\n\tFile = 20,\n\tReference = 21,\n\tCustomcolor = 22,\n\tFolder = 23,\n\tTypeParameter = 24,\n\tUser = 25,\n\tIssue = 26,\n\tSnippet = 27\n}\n\nexport enum CompletionItemTag {\n\tDeprecated = 1\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\n/**\n * A positioning preference for rendering content widgets.\n */\nexport enum ContentWidgetPositionPreference {\n\t/**\n\t * Place the content widget exactly at a position\n\t */\n\tEXACT = 0,\n\t/**\n\t * Place the content widget above a position\n\t */\n\tABOVE = 1,\n\t/**\n\t * Place the content widget below a position\n\t */\n\tBELOW = 2\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText = 0,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead = 1,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite = 2\n}\n\n/**\n * Configuration options for auto indentation in the editor\n */\nexport enum EditorAutoIndentStrategy {\n\tNone = 0,\n\tKeep = 1,\n\tBrackets = 2,\n\tAdvanced = 3,\n\tFull = 4\n}\n\nexport enum EditorOption {\n\tacceptSuggestionOnCommitCharacter = 0,\n\tacceptSuggestionOnEnter = 1,\n\taccessibilitySupport = 2,\n\taccessibilityPageSize = 3,\n\tariaLabel = 4,\n\tautoClosingBrackets = 5,\n\tautoClosingOvertype = 6,\n\tautoClosingQuotes = 7,\n\tautoIndent = 8,\n\tautomaticLayout = 9,\n\tautoSurround = 10,\n\tcodeLens = 11,\n\tcolorDecorators = 12,\n\tcolumnSelection = 13,\n\tcomments = 14,\n\tcontextmenu = 15,\n\tcopyWithSyntaxHighlighting = 16,\n\tcursorBlinking = 17,\n\tcursorSmoothCaretAnimation = 18,\n\tcursorStyle = 19,\n\tcursorSurroundingLines = 20,\n\tcursorSurroundingLinesStyle = 21,\n\tcursorWidth = 22,\n\tdisableLayerHinting = 23,\n\tdisableMonospaceOptimizations = 24,\n\tdragAndDrop = 25,\n\temptySelectionClipboard = 26,\n\textraEditorClassName = 27,\n\tfastScrollSensitivity = 28,\n\tfind = 29,\n\tfixedOverflowWidgets = 30,\n\tfolding = 31,\n\tfoldingStrategy = 32,\n\tfoldingHighlight = 33,\n\tunfoldOnClickAfterEndOfLine = 34,\n\tfontFamily = 35,\n\tfontInfo = 36,\n\tfontLigatures = 37,\n\tfontSize = 38,\n\tfontWeight = 39,\n\tformatOnPaste = 40,\n\tformatOnType = 41,\n\tglyphMargin = 42,\n\tgotoLocation = 43,\n\thideCursorInOverviewRuler = 44,\n\thighlightActiveIndentGuide = 45,\n\thover = 46,\n\tinDiffEditor = 47,\n\tletterSpacing = 48,\n\tlightbulb = 49,\n\tlineDecorationsWidth = 50,\n\tlineHeight = 51,\n\tlineNumbers = 52,\n\tlineNumbersMinChars = 53,\n\tlinks = 54,\n\tmatchBrackets = 55,\n\tminimap = 56,\n\tmouseStyle = 57,\n\tmouseWheelScrollSensitivity = 58,\n\tmouseWheelZoom = 59,\n\tmultiCursorMergeOverlapping = 60,\n\tmultiCursorModifier = 61,\n\tmultiCursorPaste = 62,\n\toccurrencesHighlight = 63,\n\toverviewRulerBorder = 64,\n\toverviewRulerLanes = 65,\n\tpadding = 66,\n\tparameterHints = 67,\n\tpeekWidgetDefaultFocus = 68,\n\tdefinitionLinkOpensInPeek = 69,\n\tquickSuggestions = 70,\n\tquickSuggestionsDelay = 71,\n\treadOnly = 72,\n\trenameOnType = 73,\n\trenderControlCharacters = 74,\n\trenderIndentGuides = 75,\n\trenderFinalNewline = 76,\n\trenderLineHighlight = 77,\n\trenderLineHighlightOnlyWhenFocus = 78,\n\trenderValidationDecorations = 79,\n\trenderWhitespace = 80,\n\trevealHorizontalRightPadding = 81,\n\troundedSelection = 82,\n\trulers = 83,\n\tscrollbar = 84,\n\tscrollBeyondLastColumn = 85,\n\tscrollBeyondLastLine = 86,\n\tscrollPredominantAxis = 87,\n\tselectionClipboard = 88,\n\tselectionHighlight = 89,\n\tselectOnLineNumbers = 90,\n\tshowFoldingControls = 91,\n\tshowUnused = 92,\n\tsnippetSuggestions = 93,\n\tsmoothScrolling = 94,\n\tstopRenderingLineAfter = 95,\n\tsuggest = 96,\n\tsuggestFontSize = 97,\n\tsuggestLineHeight = 98,\n\tsuggestOnTriggerCharacters = 99,\n\tsuggestSelection = 100,\n\ttabCompletion = 101,\n\ttabIndex = 102,\n\tunusualLineTerminators = 103,\n\tuseTabStops = 104,\n\twordSeparators = 105,\n\twordWrap = 106,\n\twordWrapBreakAfterCharacters = 107,\n\twordWrapBreakBeforeCharacters = 108,\n\twordWrapColumn = 109,\n\twordWrapMinified = 110,\n\twrappingIndent = 111,\n\twrappingStrategy = 112,\n\tshowDeprecated = 113,\n\teditorClassName = 114,\n\tpixelRatio = 115,\n\ttabFocusMode = 116,\n\tlayoutInfo = 117,\n\twrappingInfo = 118\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\tMeta = 57,\n\tContextMenu = 58,\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\tNumLock = 78,\n\tScrollLock = 79,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\tNUMPAD_0 = 93,\n\tNUMPAD_1 = 94,\n\tNUMPAD_2 = 95,\n\tNUMPAD_3 = 96,\n\tNUMPAD_4 = 97,\n\tNUMPAD_5 = 98,\n\tNUMPAD_6 = 99,\n\tNUMPAD_7 = 100,\n\tNUMPAD_8 = 101,\n\tNUMPAD_9 = 102,\n\tNUMPAD_MULTIPLY = 103,\n\tNUMPAD_ADD = 104,\n\tNUMPAD_SEPARATOR = 105,\n\tNUMPAD_SUBTRACT = 106,\n\tNUMPAD_DECIMAL = 107,\n\tNUMPAD_DIVIDE = 108,\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\tABNT_C1 = 110,\n\tABNT_C2 = 111,\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE = 112\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8\n}\n\nexport enum MarkerTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA = 1,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN = 2,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS = 3,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS = 4,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE = 5,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT = 6,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY = 7,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE = 8,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET = 9,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER = 10,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR = 11,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET = 12,\n\t/**\n\t * Mouse is outside of the editor.\n\t */\n\tOUTSIDE_EDITOR = 13\n}\n\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport enum OverlayWidgetPositionPreference {\n\t/**\n\t * Position the overlay widget in the top right corner\n\t */\n\tTOP_RIGHT_CORNER = 0,\n\t/**\n\t * Position the overlay widget in the bottom right corner\n\t */\n\tBOTTOM_RIGHT_CORNER = 1,\n\t/**\n\t * Position the overlay widget in the top center\n\t */\n\tTOP_CENTER = 2\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\nexport enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport enum RenderMinimap {\n\tNone = 0,\n\tText = 1,\n\tBlocks = 2\n}\n\nexport enum ScrollType {\n\tSmooth = 0,\n\tImmediate = 1\n}\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR = 0,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL = 1\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3\n}\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport enum SymbolTag {\n\tDeprecated = 1\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/core/token';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/base/common/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\tprivate _cachedTextValue: string | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tgetText(): string {\n\t\tif (this._cachedTextValue === null) {\n\t\t\tthis._cachedTextValue = this._lines.join(this._eol);\n\t\t}\n\t\treturn this._cachedTextValue;\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { DiffComputer } from 'vs/editor/common/diff/diffComputer';\nimport { EndOfLineSequence, IWordAtPosition } from 'vs/editor/common/model';\nimport { IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/modes';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/modes/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport { IDiffComputationResult } from 'vs/editor/common/services/editorWorkerService';\nimport { createMonacoBaseAPI } from 'vs/editor/common/standalone/standaloneBase';\nimport * as types from 'vs/base/common/types';\nimport { EditorWorkerHost } from 'vs/editor/common/services/editorWorkerServiceImpl';\n\nexport interface IMirrorModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = undefined> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\n\teol: string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\twords(wordDefinition: RegExp): Iterable<string>;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\ninterface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tlet wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\n\n\t\tconst lines = this._lines;\n\t\tconst wordenize = this._wordenize.bind(this);\n\n\t\tlet lineNumber = 0;\n\t\tlet lineText = '';\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\n\t\treturn {\n\t\t\t*[Symbol.iterator]() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\t\t\twordRangesIdx += 1;\n\t\t\t\t\t\tyield value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lineNumber < lines.length) {\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\n\t\t\t\t\t\t\twordRangesIdx = 0;\n\t\t\t\t\t\t\tlineNumber += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tlet content = this._lines[lineNumber - 1];\n\t\tlet ranges = this._wordenize(content, wordDefinition);\n\t\tlet words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tlet lineEnding = this._eol;\n\t\tlet startLineIndex = range.startLineNumber - 1;\n\t\tlet endLineIndex = range.endLineNumber - 1;\n\t\tlet resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out = this._lineStarts!.getIndexOf(offset);\n\t\tlet lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tlet maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare const require: any;\n\n/**\n * @internal\n */\nexport class EditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate readonly _host: EditorWorkerHost;\n\tprivate _models: { [uri: string]: MirrorModel; };\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(host: EditorWorkerHost, foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._host = host;\n\t\tthis._models = Object.create(null);\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprivate _getModels(): ICommonModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic async computeDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean, maxComputationTime: number): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: true,\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true,\n\t\t\tmaxComputationTime: maxComputationTime\n\t\t});\n\n\t\tconst diffResult = diffComputer.computeDiff();\n\t\tconst identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n\t\treturn {\n\t\t\tquitEarly: diffResult.quitEarly,\n\t\t\tidentical: identical,\n\t\t\tchanges: diffResult.changes\n\t\t};\n\t}\n\n\tprivate _modelsAreIdentical(original: ICommonModel, modified: ICommonModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic async computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = mergeSort(edits, (a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tlet aRng = a.range ? 0 : 1;\n\t\t\tlet bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, false);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic async computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn computeLinks(model);\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic async textualSuggest(modelUrl: string, position: IPosition, wordDef: string, wordDefFlags: string): Promise<string[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\n\t\tconst words: string[] = [];\n\t\tconst seen = new Set<string>();\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tconst wordAt = model.getWordAtPosition(position, wordDefRegExp);\n\t\tif (wordAt) {\n\t\t\tseen.add(model.getValueInRange(wordAt));\n\t\t}\n\n\t\tfor (let word of model.words(wordDefRegExp)) {\n\t\t\tif (seen.has(word)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen.add(word);\n\t\t\tif (!isNaN(Number(word))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twords.push(word);\n\t\t\tif (seen.size > EditorSimpleWorker._suggestionsLimit) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn words;\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tpublic async computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Object.create(null);\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tlet words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\tpublic async navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn null;\n\t\t}\n\t\tlet word = model.getValueInRange(wordRange);\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn result;\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any, foreignHostMethods: string[]): Promise<string[]> {\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._host.fhr(method, args);\n\t\t};\n\n\t\tconst foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n\n\t\tlet ctx: IWorkerContext<any> = {\n\t\t\thost: foreignHost,\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._foreignModule));\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: EditorWorkerHost): IRequestHandler {\n\treturn new EditorSimpleWorker(host, null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tlet MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tlet monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tif (typeof (<any>self).define !== 'function' || !(<any>self).define.amd) {\n\t\timportScripts(monacoBaseUrl + 'vs/loader.js');\n\t}\n\n\trequire.config({\n\t\tbaseUrl: monacoBaseUrl,\n\t\tcatchError: true\n\t});\n\n\tlet loadCode = function (moduleId: string) {\n\t\trequire([moduleId], function (ws) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlet messageHandler = ws.create((msg: any, transfer?: Transferable[]) => {\n\t\t\t\t\t(<any>self).postMessage(msg, transfer);\n\t\t\t\t}, null);\n\n\t\t\t\tself.onmessage = (e: MessageEvent) => messageHandler.onmessage(e.data);\n\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message: MessageEvent) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}